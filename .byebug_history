continue
next
continue
next
continue
@concessionaries
next
continue
respond_to
params
continue
next
params
continue
next
params
param
metho
params
continue
next
continue
params
continue
next
continue
@concessionaries
next
continue
contninue
nue
continue
@grandTotal
continue
@grandTotal
continue
@grandTotal
continue
@grandTotal
continue
@grandTotal
continue
@grandTotal
next
continue
@grandTotal
next
@enteros
next
list 14
list
exit
continue
c
n
next
self.instance_variables
initialize
self.instance_variables
self.methods.grep /var/
self
this
methods
UMA
variables
CVARIABLES
vRIblwa
class_variables
instance_variables
cd p
p = Entero.new
cd ..
ls 
ls instance
ls @grandTotal
ls variable
ls instance
cd Entero
ls Entero
exit
cd ..
cd Entero
cd Enteros
exit
pry
step
continue
next
continue
@concessionary
next
continue
@concessionary
next
continue
Concessionary.find_by name:entero_params[:taxpayer]
Concessioanry.find_by name:entero_params[:taxpayer]
entero_params
@concessionary
next
continue
@concessionary
next
@concessionary
continue
@concessionary
@entero.concessionary = @concessionary
@entero.concessionary
next
entero_params[:taxpayer]
entero_params.class
entero_params.class?
entero_params.taxpayer
entero_params
enterpo_params
continue
(tax*quantity)
tax
@quantity
@cost
continue
continu
@cost
next
list
tax
@quantity
list
unit
entero.unit
continue
@quantity
tax
continue
quantity
tax
next
(sm*4).round(2)
sm*4
sm
continue
tax
continue
tax
@quantity
unit
continue
next
unit
@quantity
continue
(@cost*0.3)
tax
continue
tax
quantity*tax
quantity
@cost
continue
@quantity
next
@quantity
quantity
next
continue
next
continue
@quantity = quantity * 0.001?unit=='KILOGRAMO':@quantity = quantity
list
unit == 'KILOGRAMO'
unix == 'KILOGRAMO'
@quantity
next
@quantity
quantity
continue
@quantity
unit
unix
continue
tax
continue
tax
entero.quantity
entero
continue
Time.now.strftime("%d%m%Y-%j-#{Concessionary.find_by(name:@enteros.first.taxpayer).id}")conin
Time.now.strftime("%d%m%Y-%j-#{Concessionary.find_by(name:@enteros.first.taxpayer).id}")
Time.now.strftime("%d%m%Y-%j-#{Concessionary.find_by(name:@enteros.first.taxpayer).pluck(:id)}")
Time.now.strftime("%d%m%Y-%j-#{Concessionary.find_by(name:@enteros.first.taxpayer).pluck:id}")
Time.now.strftime("%d%m%Y-%j-#{Concessionary.find_by(name:@enteros.first.taxpayer)}")
Time.now.strftime("%d%m%Y-%j-#{@enteros.first.taxpayer}")
@enteros
next
nest
@enteros
Time.now.strftime("%d%m%Y-%j-#{@enteros.first.taxpayer}")
Time.now.strftime("%d%m%Y-%j-#{Concessionary.find_by(name:@enteros.first.taxpayer)}")
Concessionary
Concessinary
Time.now.strftime("%d%m%Y-%j-#{Concessionary.find_by(name:@enteros.first.taxpayer)}")
Time.now.strftime("%d%m%Y-%j-%I")
Time.now.strftime("%d%m%Y-%j-%H")
Time.now.strftime("%d%m%Y-%j")
Time.now.strftime("%d%m%Y%j")
Time.now.strftime("%d%m%Y")
Time.now.strftime("%d%m%Y%m")
Time.now.strftime("%d%m%Y%H")
Time.now.strftime("%d%m%Y%h")
Time.now.strftime("%d%m%Y")
Time.now.strftime("%d%m%y")
Time.now.strftime("%d%mm")
Time.now.strftime("%d%m")
Time.now.strftime("%d")
Time.now.strfrm("%d")
Time.now
enteros
entero
@enteros
exit
@last_value
value
continue
@vehicle.debt
@debts
@debt
vehicle
@vehicle
continue
render @vehicle.debt
render :to_partial_path @vehicle.debt
render @vehicle.debt
render partial @vehicle.debt
render @vehicle.debt
render @vehicle.debts
render @vehicle.debt
render
@vehicle.debt
@vehicle
continue
vehicle_params
continue
break
vehicle_params
continue
vehicle_params
continue
vehicle_params
vehicle_pamras
continue
vehicle_params
continue
@vehicle = @concessionary.vehicle(1)
@vehicle = @concessionary.vehicle
continue
@vehicles
